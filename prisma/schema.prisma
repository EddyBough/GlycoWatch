datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String    @unique
  password      String? 
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  profile       Profile? // relation vers le profil
  measurements  Measurement[]
}

model Account {
  id                Int       @id @default(autoincrement())
  userId            Int
  type              String
  provider          String
  providerAccountId String
  refreshToken      String?
  accessToken       String?
  expiresAt         Int?
  tokenType         String?
  scope             String?
  idToken           String?
  sessionState      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           Int       @id @default(autoincrement())
  sessionToken String    @unique
  userId       Int
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String    @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Profile {
  id         Int     @id @default(autoincrement())
  userId     Int     @unique
  birthdate  DateTime
  address    String?
  phone      String?
  user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Measurement {
  id          Int      @id @default(autoincrement())
  userId      Int
  insulinLevel Float
  date        DateTime @default(now())
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}


